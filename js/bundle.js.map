{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;ACnHiC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,2BAA2B,UAAU,MAAM,SAAS;AACpD,kDAAkD,WAAW;AAC7D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gEAAY;AAChB;AACA,2BAA2B,iCAAiC,OAAO;AACnE;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC3D4B,CAAC;AACD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA,oFAAoF;AACpF;AACA,qCAAqC;AACrC;AACA;AACA,mBAAmB;AACnB;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA,uBAAuB;AACvB;AACA,mBAAmB;AACnB,eAAe,4DAAQ;AACvB;AACA,+BAA+B;AAC/B;AACA;AACA,yCAAyC;AACzC;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB,iCAAiC;AACjC,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,gDAAgD;AAChD;AACA,8BAA8B;AAC9B,wBAAwB;AACxB;AACA;AACA,mBAAmB;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iDAAS;AACpB;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA,eAAe,kDAAU;AACzB,YAAY;AACZ;AACA;AACA,gEAAgE;AAChE;AACA,oCAAoC,aAAa;AACjD;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC9HpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF;AACrF;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mHAAmH;AACnH,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;AACD;;;;;;;;;;;;;;;ACxEpB,iBAAiB,qFAAqF;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,mCAAmC,cAAc;AACjD,qCAAqC,WAAW;AAChD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,wCAAwC;AACxC;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB,OAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA,UAAU;AACV;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA,KAAK;AACL;AACA;AACA,2BAA2B;AAC3B,mEAAmE;AACnE,UAAU;AACV;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA,0CAA0C,WAAW;AACrD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,WAAW;AACpD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;ACjNrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mDAAmD;AACnD,SAAS;AACT;AACA;AACA,gDAAgD;AAChD,SAAS;AACT;AACA;AACA;AACA;AACA,sDAAsD;AACtD,iDAAiD;AACjD,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD,qCAAqC;AACrC;AACA,0EAA0E;AAC1E;AACA,sCAAsC;AACtC;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;ACzCnB;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;AClEpB;AACA,wCAAwC;AACxC,mCAAmC;AACnC;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,2CAA2C,IAAI,WAAW,WAAW;AACrE;AACA;AACA;AACA;AACA;AACkB;;;;;;;UCvBlB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNa;AACb;AACiC;AACE;AACA;AACA;AACF;AACE;AACE;AACO;AAC5C;AACA;AACA;AACA;AACA,0CAA0C,yDAAS,iCAAiC;AACpF;AACA;AACA,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,2DAAM,GAAG;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC,E","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/./js/services/servises.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\r\n    // Калькулятор калорий\r\n\r\n    const result = document.querySelector('.calculating__result span');\r\n\r\n    let sex, height, weight, age, ratio = 1.375;\r\n\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function calcTotal() {\r\n        \r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = '____'; // Можете придумать что угодно\r\n            return;\r\n        }\r\n\r\n        if (sex === 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function getStaticInformation(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n        // console.log(elements);\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n\r\n                elements.forEach(elem => {\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n\r\n                e.target.classList.add(activeClass);\r\n\r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getDynamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch (input.getAttribute('id')) {\r\n                case \"height\":\r\n                    height = +input.value;\r\n                    break;\r\n                case \"weight\":\r\n                    weight = +input.value;\r\n                    break;\r\n                case \"age\":\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n\r\n            calcTotal();\r\n        });\r\n    }\r\n\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n\r\n}\r\n\r\nexport default calc;","import { getResourses } from \"../services/servises\";\r\n\r\nfunction cards() {\r\n    \r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.transfer = 62;\r\n            this.changeToRUB();\r\n        }\r\n\r\n        changeToRUB() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        render() {\r\n            const element = document.createElement('div');\r\n            if (this.classes.length === 0) { // Выставляем значение по умолчанию\r\n                this.element = 'menu__item';\r\n                element.classList.add(this.element);\r\n            } else {  \r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n\r\n            element.innerHTML = `\r\n                <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> руб/день</div>\r\n                </div>\r\n            `;\r\n            this.parent.append(element);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getResourses('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.forEach(({img, altimg, title, descr, price}) => { // Деструктуризиует объекты на отдельные свойства\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n            });\r\n        });\r\n\r\n}\r\n\r\n// fetch('http://localhost:3000/menu')\r\n//     .then(data => data.json())\r\n//     .then(res => console.log(res));\r\n\r\nexport default cards;","import { closeModal, openModal } from \"./modal\"; // Импортировали их сюда\r\nimport { postData } from \"../services/servises\";\r\n\r\n\r\nfunction forms(fromSelector, modalTimerId) {\r\n    \r\n       // Формы отправки данных\r\n\r\n       const forms = document.querySelectorAll(fromSelector);\r\n    //    console.log(forms);\r\n       \r\n       const message = {\r\n           loading: 'img/form/spinner.svg',\r\n           success: 'Успешно, Скоро мы с вами свяжемся',\r\n           failure: 'Ошибка или что-то пошло не так'\r\n       };\r\n   \r\n       forms.forEach(item => {\r\n           bindPostData(item);\r\n       });\r\n   \r\n   \r\n       function bindPostData(form) {\r\n           form.addEventListener('submit', (event) => {\r\n               event.preventDefault();\r\n   \r\n               let statusMessage = document.createElement('img');\r\n               statusMessage.src = message.loading; // Подгрузка картинки, вместо текста\r\n               statusMessage.style.cssText = `\r\n                   display: block;\r\n                   margin: 0 auto;\r\n               `;\r\n               // statusMessage.textContent = message.loading;\r\n               // form.append(statusMessage);\r\n   \r\n               form.insertAdjacentElement('afterend', statusMessage);\r\n   \r\n   \r\n               const formData = new FormData(form); // FormData - формирует данные ключ-значение\r\n   \r\n               const json = JSON.stringify(Object.fromEntries(formData.entries())); // fromEntries из массива в объект\r\n   \r\n               // const object = {}; // Для работы с JSON форматом \r\n               // formData.forEach(function(value, key) {\r\n               //     object[key] = value;\r\n               // });\r\n               // console.log(object);\r\n   \r\n               // fetch('server.php', { // Возвращает promise \r\n               //     method: \"POST\",\r\n               //     headers: {\r\n               //         'Content-type': 'application/json'\r\n               //     },\r\n               //     body: JSON.stringify(object)\r\n               // })\r\n               postData('http://localhost:3000/requests', json)\r\n               // .then(data => data.text()) // Текстовый ответ от сервера \r\n               .then(data => { // data - ответ от сервера \r\n                   console.log(data);\r\n                   showThanksModal(message.success);\r\n                   // setTimeout(() => { // убираем надпись после о результате (Убрали потому что добавили окно благодарности )\r\n                   statusMessage.remove();\r\n               }).catch(() => {\r\n                   showThanksModal(message.failure);\r\n               }).finally(() => {\r\n                   form.reset(); // Очищаем поля после того как ввели \r\n               });\r\n   \r\n               // Старый способ\r\n               // request.addEventListener('load', () => {\r\n               //     if (request.status === 200) {\r\n               //         console.log(request.response);\r\n               //         showThanksModal(message.success);\r\n               //         form.reset(); // Очищаем поля после того как ввели \r\n               //         // setTimeout(() => { // убираем надпись после о результате (Убрали потому что добавили окно благодарности )\r\n               //             statusMessage.remove();\r\n               //         // },5000);\r\n               //     } else { \r\n               //         showThanksModal(message.failure);\r\n               //     }\r\n               // });\r\n           });\r\n       }\r\n   \r\n       //Окно благодарности\r\n   \r\n       function showThanksModal(message) {\r\n           const prevModalDialog = document.querySelector('.modal__dialog');\r\n   \r\n           prevModalDialog.classList.add('hide');\r\n           openModal('.modal', modalTimerId);\r\n   \r\n           const thanksModal = document.createElement('div'); // Новое модальное окно с благодарностью\r\n           thanksModal.classList.add('modal__dialog');\r\n           thanksModal.innerHTML = `\r\n               <div class=\"modal__content\">\r\n                   <div class=\"modal__close\" data-close>×</div>\r\n                   <div class=\"modal__title\">${message}</div>\r\n               </div>\r\n           `;\r\n   \r\n           document.querySelector('.modal').append(thanksModal); // Вызывается \r\n           setTimeout(() => {\r\n               thanksModal.remove();\r\n               prevModalDialog.classList.add('show');\r\n               prevModalDialog.classList.remove('hide');\r\n               closeModal('.modal');\r\n           },5000);\r\n       }\r\n   \r\n       // fetch('https://jsonplaceholder.typicode.com/posts', { // (Пример) fetch запрос, лучше чем XMLHTTP запрос\r\n       //     method: \"POST\",\r\n       //     body: JSON.stringify({name: 'Alex'}),\r\n       //     headers: {\r\n       //         'Content-type': 'application/json'\r\n       //     }\r\n       // })\r\n       // .then(response => response.json())\r\n       // .then(json => console.log(json));\r\n   \r\n       // fetch('http://localhost:3000/menu')\r\n       //     .then(data => data.json())\r\n       //     .then(res => console.log(res));\r\n   \r\n}\r\n\r\nexport default forms;","// Чтобы экспортировать ф-ции и использовать их в других ф-циях и файлах\r\n// Пришлось вынести их за основную ф-цию modal\r\n\r\nfunction openModal(modalSelector, modalTimerId) {\r\n    const modal = document.querySelector(modalSelector);\r\n\r\n    modal.classList.add('show');\r\n    modal.classList.remove('hide');\r\n    document.body.style.overflow = 'hidden'; // Не позволяет прокручивать страницу, когда открыто модальное окно\r\n\r\n    // console.log(modalTimerId);\r\n\r\n    if (modalTimerId) {\r\n        clearInterval(modalTimerId); // Чтобы оно не высвечивалось постоянно, только один раз или когда пользователь уже нажал на кнопку\r\n\r\n    }\r\n}\r\n\r\nfunction closeModal(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);\r\n\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    document.body.style.overflow = '';\r\n}\r\n\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\r\n\r\n    const modalTrigger = document.querySelectorAll(triggerSelector), // Атрибут\r\n    //   modalClose = document.querySelector('[data-close]'),\r\n      modal = document.querySelector(modalSelector);\r\n\r\n    modalTrigger.forEach(btn => {\r\n        btn.addEventListener('click', () => openModal(modalSelector, modalTimerId)); // Ещё раз колбэк ф-ция для того чтоб openmodal не срабатывала\r\n                                                                       // сразу как загрузится страница, после клика внутри себя она запускает openmodal!!!\r\n    });\r\n\r\n\r\n    // modalClose.addEventListener('click', () => {\r\n    //     modal.classList.add('hide');\r\n    //     modal.classList.remove('show');\r\n    //     document.body.style.overflow = ''; \r\n    // });\r\n\r\n    // modalClose.addEventListener('click', closeModal);\r\n\r\n\r\n    modal.addEventListener('click', (event) => { // При клике на подложку окно закрывается \r\n        if (event.target === modal || event.target.getAttribute('data-close') == '') {\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n    document.addEventListener('keydown', (event) => {\r\n        if (event.code === \"Escape\" && modal.classList.contains('show')) {\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n\r\n    function ShowModalByScroll() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) { // Сравниваем прокрутку, которая справа и контент который мы видим, складываем, если сумма будет больше чем с полным сайтом который у нас открыт\r\n            openModal(modalSelector, modalTimerId); // Если условие выполняется, означает что пользователь долистал страницу\r\n            window.removeEventListener('scroll', ShowModalByScroll);\r\n        }\r\n    }\r\n    window.addEventListener('scroll', ShowModalByScroll);\r\n\r\n}\r\n\r\nexport default modal;\r\nexport {closeModal};\r\nexport {openModal};","function slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\r\n\r\n    // Slider \r\n\r\n    const slides = document.querySelectorAll(slide),\r\n        slider = document.querySelector(container),\r\n        prev = document.querySelector(prevArrow),\r\n        next = document.querySelector(nextArrow),\r\n        total = document.querySelector(totalCounter),\r\n        current = document.querySelector(currentCounter),\r\n        slidesWrapper = document.querySelector(wrapper),\r\n        slidesField = document.querySelector(field),\r\n        width = window.getComputedStyle(slidesWrapper).width;\r\n\r\n    let slideIndex = 1;\r\n    let offset = 0; // Отступ \r\n\r\n\r\n    // if (slides.length < 10) {\r\n    //     total.textContent = `0${slides.length}`;\r\n    //     current.textContent = `0${slideIndex}`;\r\n    // } else { \r\n    //     total.textContent = slides.length;\r\n    //     current.textContent = slideIndex;\r\n    // }\r\n\r\n\r\n    slidesField.style.width = 100 * slides.length + '%'; // Через инлайн стили задали одинаковую ширину\r\n    slidesField.style.display = 'flex'; // Расположили по горизонтали все слайды \r\n    slidesField.style.transition = '0.5s all';\r\n\r\n    slidesWrapper.style.overflow = 'hidden'; // Спрятали все элементы\r\n\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    slider.style.position = 'relative';\r\n\r\n    const indicators = document.createElement('ol'),\r\n        dots = [];\r\n\r\n    indicators.classList.add('carousel-indicators');\r\n    indicators.style.cssText = `\r\n      position: absolute;\r\n      right: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      z-index: 15;\r\n      display: flex;\r\n      justify-content: center;\r\n      margin-right: 15%;\r\n      margin-left: 15%;\r\n      list-style: none;\r\n    `;\r\n    slider.append(indicators);\r\n\r\n    for (let i = 0; i < slides.length; i++) { // Создаем точки \r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        dot.style.cssText = `\r\n          box-sizing: content-box;\r\n          flex: 0 1 auto;\r\n          width: 30px;\r\n          height: 6px;\r\n          margin-right: 3px;\r\n          margin-left: 3px;\r\n          cursor: pointer;\r\n          background-color: #fff;\r\n          background-clip: padding-box;\r\n          border-top: 10px solid transparent;\r\n          border-bottom: 10px solid transparent;\r\n          opacity: .5;\r\n          transition: opacity .6s ease;\r\n      `;\r\n        if (i === 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n        indicators.append(dot);\r\n        dots.push(dot);\r\n    }\r\n\r\n    function deleteNotDigits(str) {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n\r\n    function activeButton(dot) { // Подсвечивание активной кнопки\r\n        dot.forEach(dot => dot.style.opacity = '.5');\r\n        dot[slideIndex - 1].style.opacity = 1;\r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n        if (offset == deleteNotDigits(width) * (slides.length - 1)) { // '500px' Нужно отрезать 'px' \r\n            offset = 0;\r\n        } else {\r\n            offset += +deleteNotDigits(width);\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        activeButton(dots);\r\n        // dots.forEach(dot => dot.style.opacity = '.5'); // Подсвечивание активной кнопки\r\n        // dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        if (offset == 0) { // \r\n            offset = deleteNotDigits(width) * (slides.length - 1); // Смещение на последний слайд\r\n        } else {\r\n            offset -= deleteNotDigits(width);\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        activeButton(dots);\r\n        // dots.forEach(dot => dot.style.opacity = '.5');\r\n        // dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (event) => {\r\n            const slideTo = event.target.getAttribute('data-slide-to');\r\n\r\n            slideIndex = slideTo;\r\n            offset = deleteNotDigits(width) * (slideTo - 1);\r\n\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n            if (slides.length < 10) {\r\n                current.textContent = `0${slideIndex}`;\r\n            } else {\r\n                current.textContent = slideIndex;\r\n            }\r\n\r\n            activeButton(dots);\r\n            // dots.forEach(dot => dot.style.opacity = '.5');\r\n            // dots[slideIndex - 1].style.opacity = 1;\r\n\r\n        });\r\n    });\r\n\r\n    // Страрый код slider, простой \r\n\r\n    // showSlides(slideIndex);\r\n\r\n    // if (slides.length < 10) {\r\n    //     total.textContent = `0${slides.length}`;\r\n    // } else { \r\n    //     total.textContent = slides.length;\r\n    // }\r\n\r\n    // function showSlides(n) {\r\n    //     if (n > slides.length) {\r\n    //         slideIndex = 1;\r\n    //     }\r\n\r\n    //     if (n < 1) {\r\n    //         slideIndex = slides.length;\r\n    //     }\r\n\r\n    //     slides.forEach((item) => item.style.display = 'none');\r\n    //     slides[slideIndex - 1].style.display = 'block';\r\n\r\n\r\n    //     if (slides.length < 10) {\r\n    //         current.textContent = `0${slideIndex}`;\r\n    //     } else { \r\n    //         current.textContent = slideIndex;\r\n    //     }\r\n    // }\r\n\r\n    // function plusSlides(n) {\r\n    //     showSlides(slideIndex += n);\r\n    // }\r\n\r\n    // prev.addEventListener('click', () => {\r\n    //     plusSlides(-1);\r\n    // });\r\n\r\n    // next.addEventListener('click', () => {\r\n    //     plusSlides(1);\r\n    // });\r\n\r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n\r\n    const tabs = document.querySelectorAll(tabsSelector),\r\n        tabsContent = document.querySelectorAll(tabsContentSelector),\r\n        tabsParent = document.querySelector(tabsParentSelector);\r\n\r\n    function hideTabContent() {\r\n        tabsContent.forEach(item => {\r\n            item.classList.add('hide'); // добавляем класс hide для таба на который кликнули\r\n            item.classList.remove('show', 'fade'); // убираем класс show для таба на который кликнули\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove(activeClass); // Убрали подсвечивание \r\n        });\r\n\r\n    }\r\n\r\n    function ShowTabContent(i = 0) {\r\n        tabsContent[i].classList.add('show', 'fade'); // добавляем класс show для таба на который кликнули\r\n        tabsContent[i].classList.remove('hide'); // убираем класс hide для таба на который кликнули\r\n        tabs[i].classList.add(activeClass); // Добавили подсвечивание \r\n    }\r\n    hideTabContent();\r\n    ShowTabContent();\r\n\r\n\r\n    tabsParent.addEventListener('click', (event) => { // Добавляем событие в табах, его изменение по клику\r\n        const target = event.target; // Свойство event.target содержит элемент, на котором сработало событие.\r\n\r\n        if (target && target.classList.contains(tabsSelector.slice(1))) { // Проверяем кликнукли ли мы на таб (slice, чтобы отрезать точку)\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) { // Сравниваем каждый элемент в tabs с тем на который мы кликнули, если они совпадают, то вызываем функции\r\n                    hideTabContent();\r\n                    ShowTabContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport default tabs;","function timer(id, deadLine) {\r\n    \r\n\r\n    function getTimerRemaining(endtime) { //\r\n        let days, hours, minutes, seconds;\r\n\r\n        const t = Date.parse(endtime) - Date.parse(new Date()); // Разница между двумя датами в миллисекундах\r\n        // console.log(Date.parse(endtime));\r\n        if (t <= 0) {\r\n            days = 0;\r\n            hours = 0;\r\n            minutes = 0;\r\n            seconds = 0;\r\n        } else {\r\n            days = Math.floor(t / (1000 * 60 * 60 * 24)), // Math.floor() - округление до ближайшего целого\r\n            hours = Math.floor((t / (1000 * 60 * 60) % 24)), // % Берем остаток от деления на 24 (хвостик), чтобы получить часы, которые должны быть меньше 24 \r\n            minutes = Math.floor((t / 1000 / 60) % 60), // тоже самое с минутами, не больше 60 \r\n            seconds = Math.floor((t / 1000) % 60);\r\n        }\r\n\r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n\r\n\r\n    function getZero(num) { // Функция, если число не двузначное, то добавляем 0 перед ним\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n\r\n    function setClock(selector, endtime) { // Добавляем таймер на страницу\r\n        const timer = document.querySelector(selector),\r\n              days = timer.querySelector('#days'),\r\n              hours = timer.querySelector('#hours'),\r\n              minutes = timer.querySelector('#minutes'),\r\n              seconds = timer.querySelector('#seconds'),\r\n              timeInterval = setInterval(updateClock, 1000); // Функция будет запускаться через каждую секунду\r\n\r\n        updateClock(); // Вызываем тут, Чтобы убрать мигание таймера при обновлении страницы (не выводились данные с верстки)     \r\n\r\n        function updateClock() {\r\n            const t = getTimerRemaining(endtime);\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n    setClock(id, deadLine);\r\n}\r\n\r\nexport default timer;","\r\nconst postData = async (url, data) => { // async и await используются вместе \r\n    const res = await fetch(url, { // ставим await перед теми операциями, которые нам нужно дождаться \r\n        method: \"POST\", // В данном случае (без await) в res может поступить не промис, а пустое значение(ответ от сервера может быть долгим) и будет ошибка, поэтому нужен синхронный код\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        body: data\r\n    });\r\n\r\n    return await res.json();\r\n};\r\n\r\nconst getResourses = async (url) => { // async и await используются вместе \r\n    const res = await fetch(url);\r\n\r\n    if (!res.ok) {\r\n        throw new Error(`Could not fetch ${url}, status ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n};\r\n\r\nexport {postData};\r\nexport {getResourses};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\r\n\r\nimport tabs from'./modules/tabs';\r\nimport modal from'./modules/modal';\r\nimport timer from'./modules/timer';\r\nimport cards from'./modules/cards';\r\nimport calc from'./modules/calc';\r\nimport forms from'./modules/forms';\r\nimport slider from'./modules/slider';\r\nimport { openModal } from './modules/modal';\r\n\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n\r\n    const modalTimerId = setTimeout(() => openModal('.modal',modalTimerId), 50000); // Через 50 секунд вызовет модальное окно\r\n\r\n\r\n    tabs('.tabheader__item','.tabcontent','.tabheader__items','tabheader__item_active');\r\n    modal('[data-modal]','.modal', modalTimerId);\r\n    timer('.timer', '2023-06-11');\r\n    cards();\r\n    calc();\r\n    forms('form', modalTimerId);\r\n    slider({ // Деструктуризация \r\n        container: '.offer__slider',\r\n        nextArrow: '.offer__slider-next',\r\n        prevArrow: '.offer__slider-prev',\r\n        slide: '.offer__slide',\r\n        totalCounter: '#total',\r\n        currentCounter: '#current',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.offer__slider-inner'\r\n    });\r\n\r\n\r\n});"],"names":[],"sourceRoot":""}